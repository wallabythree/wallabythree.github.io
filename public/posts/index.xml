<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on wallaby</title><link>http://localhost:1313/posts/</link><description>Recent content in Posts on wallaby</description><generator>Hugo</generator><language>en-gb</language><lastBuildDate>Thu, 19 Jun 2025 13:39:15 +0200</lastBuildDate><atom:link href="http://localhost:1313/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>smileyCTF 2025: Fruit Ninja</title><link>http://localhost:1313/posts/smileyctf-25-fruit-ninja/</link><pubDate>Thu, 19 Jun 2025 13:39:15 +0200</pubDate><guid>http://localhost:1313/posts/smileyctf-25-fruit-ninja/</guid><description>&lt;blockquote>
&lt;p>my friend made a custom cpu, so of course i had to make a game for it. can you win? @unvariant REMEMBER TO GIVE THEM CPU&lt;/p>
&lt;p>&lt;code>rev&lt;/code>, 8 solves, created by flocto&lt;/p>&lt;/blockquote>
&lt;p>&lt;em>Fruit Ninja&lt;/em> was a fun challenge from last week&amp;rsquo;s smileyCTF. It involved reverse engineering code written for a custom RISC-V 32 processor with a Harvard architecture, which could be relinked using a custom linker script to allow for easy static analysis. This revealed a straightforward flag checking scheme that could trivially be brute forced.&lt;/p></description></item></channel></rss>