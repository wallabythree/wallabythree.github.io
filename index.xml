<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>wallaby</title><link>https://wallabythree.github.io/</link><description>Recent content on wallaby</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 01 Aug 2022 11:03:21 +0200</lastBuildDate><atom:link href="https://wallabythree.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>MCH2022 badge challenge: "Hack Me If You Can"</title><link>https://wallabythree.github.io/posts/mch2022-badge-challenge/</link><pubDate>Mon, 01 Aug 2022 11:03:21 +0200</pubDate><guid>https://wallabythree.github.io/posts/mch2022-badge-challenge/</guid><description>
&lt;img src="https://wallabythree.github.io/img/badge-challenge-cover.png"/>
The badge for the [MCH2022](https://www.mch2022.org) hacker camp comes with a CTF challenge, which, thanks to the ESP32's Xtensa architecture, appears to be somewhat protected against classic stack overflow attacks. However, thanks to recursion in the main loop, a buffer overflow is all that is needed to solve this challenge. This post will walk through the vulnerability and explain how it can be exploited to steal the flag.</description></item><item><title>About</title><link>https://wallabythree.github.io/about/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wallabythree.github.io/about/</guid><description>
Photo: wirestock
struct wallaby { void* point; }; struct wallaby three { NULL };</description></item><item><title>About</title><link>https://wallabythree.github.io/page-about/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wallabythree.github.io/page-about/</guid><description/></item></channel></rss>